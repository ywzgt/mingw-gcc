#!/bin/bash

set -e

if [[ -n $1 ]]; then
	ARCH=$1
else
	ARCH=x86_64
fi

if [ $# -ge 2 ]; then
	BOOTSTRAP_BIN=1
	source envars.sh
fi

echo "BUILD_DATE=$(date -u +%Y%m%d)" >> $GITHUB_ENV

if [[ $BOOTSTRAP_BIN ]]; then
	wget -q https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest
	[[ $THREADS != win32 ]] || { THREADS=; sed -i '/-\(posix\|mcf\)-/d' latest; }
	URL=$(grep browser_download_url latest | grep -o "https://.*mingw-gcc-.*$THREADS-ucrt-$ARCH.tar.xz")
fi

wget -nv -c https://github.com/$GITHUB_ACTOR/alfs-sysroot/releases/latest/download/rootfs.tar.xz{,.sha256} $URL
rm -f releases latest; sha256sum -c rootfs.tar.xz.sha256 && sudo mkdir rootfs
echo " -> Extracting the 'rootfs.tar.xz'..."
sudo tar xf rootfs.tar.xz -C rootfs
echo " -> Preparing Virtual Kernel File Systems..."
sudo mkdir -pv rootfs/{dev,proc,sys,run,tmp}
sudo mount -v --bind /dev rootfs/dev
sudo mount -v --bind /dev/pts rootfs/dev/pts
sudo mount -vt proc proc rootfs/proc
sudo mount -vt sysfs sysfs rootfs/sys
sudo mount -vt tmpfs tmpfs rootfs/run
sudo mount -vt tmpfs tmpfs rootfs/tmp
if [ -h rootfs/dev/shm ]; then sudo mkdir -pv rootfs/$(readlink rootfs/dev/shm); else sudo mount -vt tmpfs -o nosuid,nodev devshm rootfs/dev/shm; fi
sudo bash -c "echo -e 'nameserver 1.1.1.1\nnameserver 8.8.8.8' >rootfs/etc/resolv.conf"
sudo install -do $(id -u) -g $(id -g) rootfs/build

for i in $URL; do
	echo " -> Extracting the '$(basename $i)'..."
	sudo tar xf "$(basename $i)" -C rootfs
done

if [[ $ARCH != i?86 && $ARCH != x86_64 ]]; then
	sed -i 's/-mtune=[a-z0-9]\+\s//' envars.sh
fi
cp *.sh rootfs/build

install -m755 /dev/stdin ./chroot_run <<-"EOF"
	sudo chroot rootfs \
		/usr/bin/env -i HOME=/root \
		TERM=$TERM PATH=/usr/bin:/usr/sbin \
		/bin/bash --login -c "cd /build; $*"
EOF
